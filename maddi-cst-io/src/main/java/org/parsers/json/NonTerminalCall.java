/*
 * maddi: a modification analyzer for duplication detection and immutability.
 * Copyright 2020-2025, Bart Naudts, https://github.com/CodeLaser/maddi
 *
 * This program is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
 * more details. You should have received a copy of the GNU Lesser General Public
 * License along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* Generated by: CongoCC Parser Generator. NonTerminalCall.java */
package org.parsers.json;

import java.io.PrintStream;


public class NonTerminalCall {
    final TokenSource lexer;
    final String sourceFile;
    public final String productionName;
    final String parserClassName;
    final int line, column;

    public NonTerminalCall(String parserClassName, TokenSource lexer, String sourceFile, String productionName, int line, int column) {
        this.parserClassName = parserClassName;
        this.lexer = lexer;
        this.sourceFile = sourceFile;
        this.productionName = productionName;
        this.line = line;
        this.column = column;
    }

    final TokenSource getTokenSource() {
        return lexer;
    }

    StackTraceElement createStackTraceElement() {
        return new StackTraceElement("JSONParser", productionName, sourceFile, line);
    }

    public void dump(PrintStream ps) {
        ps.println(productionName + ":" + line + ":" + column);
    }

}


